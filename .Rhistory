rm(list= ls()) # Removes all Variables stored previously
library(Hmisc)#import
data<-read.csv("bestsellers with categories.csv",TRUE,",")
describe(data) # Hmisc Command
print (ncol(data)) # print number of columns
print(nrow(data))# print number of rows
print(head(data))
# The mean value
mean = mean(data$Price)
print(mean)
# The median value
median = median(data$Price)
print(median)
# The Mode value by sorting col
mode = function(){
return(sort(-table(data$Price))[1])
}
mode()
# Calculating variance using var()
print(var(data$Price))
#clculating Standerd Deviation
print(sd(data$Price))
#Alternate method to get min and max
print(range(data$Price))
# Calculating IQR
IQR = IQR(data$Price)
print(IQR)
# Calculating summary Price
summary = summary(data$Price)
print(summary)
# Calculating summary Reviews
summary = summary(data$Reviews)
print(summary)
# Calculating summary Rating
summary = summary(data$User.Rating)
print(summary)
# Libraries
library(ggplot2)
library(dplyr)
# Plot
data %>%
tail(10) %>%
ggplot( aes(x=Year, y=Price)) +
geom_line() +
geom_point()
# Create Data
data <- data.frame(
group=c("Fiction","Non Fictoin"),
Genre=c(240,310)
)
# Basic piechart
ggplot(data, aes(x="", y=Genre, fill=group)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
colour = c("green", "orange", "brown","yellow","Red","blue")
Reviews <- c(17350,2052
,18979, 21424
,7665
,12643
)
Name <- c("10-Day Green Smoothie Cleanse", "11/22/63: A Novel", "12 Rules for Life: An Antidote to Chaos", "1984 (Signet Classics)", "5,000 Awesome Facts (About Everything!) (National Geograph", "A Dance with Dragons (A Song of Ice and Fire)")
# Create the bar chart
barplot(Reviews, main = "Reviews for Book Names", names.arg = Name,
xlab = "Book Names", ylab = "Reviews",
col =colour, beside = TRUE)
#Creating data
names <- c(rep("A", 20) , rep("B", 20) , rep("C", 20), rep("D", 20))
value <- c( sample(2:5, 20 , replace=T) , sample(6:10, 20 , replace=T),
sample(1:7, 20 , replace=T), sample(3:10, 20 , replace=T) )
data <- data.frame(names,value)
# Classic boxplot (A-B-C-D order)
# boxplot(data$value ~ data$names)
# I reorder the groups order : I change the order of the factor data$names
data$names <- factor(data$names , levels=c("A", "D", "C", "B"))
#The plot is now ordered !
boxplot(data$value ~ data$names , col=rgb(0.3,0.5,0.4,0.6) , ylab="value" ,
xlab="names in desired order")
# Create data
data = data.frame(
x=seq(1:100) + 0.1*seq(1:100)*sample(c(1:10) , 100 , replace=T),
y=seq(1:100) + 0.2*seq(1:100)*sample(c(1:10) , 100 , replace=T)
)
# Basic scatterplot
plot(x=data$x, y=data$y)
data<-read.csv("bestsellers with categories.csv",TRUE,",")
describe(data)
class(data)
describe(data) # Hmisc Command
print (ncol(data))
print(nrow(data))
print(head(data))
data<-read.csv("bestsellers with categories.csv",TRUE,",")
describe(data)
mean(data[['Price']])
mean(data[['Price']],trim=0.1)
median(data[['Price']])
data<-read.csv("bestsellers.csv",TRUE,",")
mean(data[['Price']])
mean(data[['Price']],trim=0.1)
median(data[['Price']])
> weighted.mean(data[['Reviews']], w=data[['Price']])
weighted.mean(data[['Reviews']], w=data[['Price']])
install.packages("matrixStats")
install.packages("matrixStats")
library('matrixStats')
weightedMedian(data[['Reviews']], w=data[['Price']])
quantile(data[['Price']], p=c(.05, .25, .5, .75, .95))
boxplot(data[['Price']]/1000000, ylab='Price')
breaks <- seq(from=min(data[['Price']]),
to=max(data[['Price']]), length=11)
pop_freq <- cut(data[['Price']], breaks=breaks,
right=TRUE, include.lowest=TRUE)
table(pop_freq)
hist(data[['Reviews']], freq=FALSE)
lines(density(data[['Reviews']]), lwd=3, col='blue')
barplot(as.matrix(dfw) / 6, cex.axis=0.8, cex.names=0.7,
xlab='Cause of delay', ylab='Count')
barplot(as.matrix(data) / 6, cex.axis=0.8, cex.names=0.7,
xlab='Cause of delay', ylab='Count')
barplot(as.matrix(Price) / 6, cex.axis=0.8, cex.names=0.7,
xlab='Cause of delay', ylab='Count')
install.packages("corrplot")
plot(data$Price, data$Rivews, xlab='Price)', ylab='Rivews')
plot(data$Price, data$Rivews, xlab='Price)', ylab='Rivews')
plot(data$Price, data$Reviews, xlab='Price)', ylab='Reviews')
install.packages("descr")
library(descr)
x_tab <- CrossTable(lc_loans$grade, lc_loans$status,
prop.c=FALSE, prop.chisq=FALSE, prop.t=FALSE)
library(descr)
x_tab <- CrossTable(lc_loans$grade, lc_loans$status,
prop.c=FALSE, prop.chisq=FALSE, prop.t=FALSE)
boxplot(pct_carrier_delay ~ airline, data=airline_stats, ylim=c(0, 50))
library(ggplot2)
# take a simple random sample
samp_data <- data.frame(income=sample(loans_income, 1000),
type='data_dist')
rpois(100, lambda=2)
data.poisson.rvs(2, size=100)
rexp(n=100, rate=0.2)
rweibull(100, 1.5, 5000)
boxplot(data[['Price']]/1000000, ylab='Price')
breaks <- seq(from=min(data[['Price']]),
to=max(data[['Price']]), length=11)
pop_freq <- cut(data[['Price']], breaks=breaks,
right=TRUE, include.lowest=TRUE)
table(pop_freq)
rpois(100, lambda=2)
rexp(n=100, rate=0.2)
rweibull(100, 1.5, 5000)

